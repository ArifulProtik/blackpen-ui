.tiptap {
  @apply outline-none !important;
}
.ProseMirror {
  @apply z-0 mx-auto caret-black outline-none;

  .selection {
    @apply inline;
  }

  .selection,
  *::selection {
    @apply inline bg-black/10 dark:bg-white/20;
  }

  & > .react-renderer {
    @apply my-12 first:mt-0 last:mb-0;
  }

  &.resize-cursor {
    @apply cursor-col-resize;
  }

  .ProseMirror-gapcursor {
    @apply relative mx-auto w-full max-w-2xl;

    &:after {
      @apply -top-[1.5em] left-0 right-0 mx-auto w-full max-w-2xl border-t-black/40 dark:border-t-white/40;
    }
  }
}

[data-theme='slash-command'] {
  width: 1000vw;
}

/* Block CSS */

.ProseMirror {
  /* Image Block */
  figure[data-type='imageBlock'] {
    @apply m-0;

    img {
      @apply block w-full rounded;
    }
  }

  /* Block Quote */
  figure[data-type='blockquoteFigure'] {
    @apply my-14 text-black dark:text-white;
  }

  & > blockquote,
  [data-type='blockquoteFigure'] {
    blockquote {
      @apply m-0;

      & > * {
        @apply first:mt-0 last:mb-0;
      }
    }
  }

  /* Columns */
  [data-type='columns'] {
    @apply mb-12 mt-14 grid gap-4;

    &.layout-sidebar-left {
      grid-template-columns: 40fr 60fr;
    }

    &.layout-sidebar-right {
      grid-template-columns: 60fr 40fr;
    }

    &.layout-two-column {
      grid-template-columns: 1fr 1fr;
    }
  }

  [data-type='column'] {
    @apply overflow-auto;
  }

  /* Details */
  [data-type='details'] {
    @apply mx-auto my-6 flex gap-1 rounded border border-gray-300 p-2;

    summary {
      @apply block font-bold;
    }

    > button {
      @apply flex h-5 w-5 cursor-pointer items-center justify-center rounded border-none bg-transparent text-xs;

      &:hover {
        @apply bg-gray-300 dark:bg-gray-800;
      }

      &::before {
        content: '\25B6';
      }
    }

    &.is-open > button::before {
      @apply rotate-90;
    }

    > div {
      @apply flex w-full flex-col gap-4;

      > [data-type='detailsContent'] > :last-child {
        @apply mb-2;
      }
    }

    [data-type='details'] {
      @apply mx-0 my-2;
    }
  }
}

/* code blocks */
.ProseMirror {
  code {
    @apply rounded-sm bg-neutral-900 font-mono text-white caret-white shadow-lg;

    &::selection {
      @apply bg-white/30;
    }
  }

  pre {
    @apply my-12 w-full rounded border bg-zinc-800 p-4 text-white caret-white dark:border-neutral-800 dark:bg-neutral-900;

    *::selection {
      @apply bg-white/20;
    }

    code {
      @apply w-full bg-inherit p-0 text-inherit shadow-none;
    }

    .hljs-comment,
    .hljs-quote {
      @apply text-neutral-400;
    }

    .hljs-variable,
    .hljs-template-variable,
    .hljs-attribute,
    .hljs-tag,
    .hljs-name,
    .hljs-regexp,
    .hljs-link,
    .hljs-name,
    .hljs-selector-id,
    .hljs-selector-class {
      @apply text-red-300;
    }

    .hljs-number,
    .hljs-meta,
    .hljs-built_in,
    .hljs-builtin-name,
    .hljs-literal,
    .hljs-type,
    .hljs-params {
      @apply text-orange-300;
    }

    .hljs-string,
    .hljs-symbol,
    .hljs-bullet {
      @apply text-lime-300;
    }

    .hljs-title,
    .hljs-section {
      @apply text-yellow-300;
    }

    .hljs-keyword,
    .hljs-selector-tag {
      @apply text-teal-300;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: 700;
    }
  }
}

/* list */

.ProseMirror {
  ol {
    @apply list-decimal;
  }

  ul {
    @apply list-disc text-black;
  }

  ul,
  ol {
    @apply my-6 px-8 py-0 first:mt-0 last:mb-0;

    ul,
    ol,
    li {
      @apply my-1;
    }

    p {
      @apply mb-1 mt-0;
    }
  }

  & > ul,
  & > ol {
    @apply my-8 first:mt-0 last:mb-0;
  }

  ul[data-type='taskList'] {
    @apply list-none p-0;

    p {
      @apply m-0;
    }

    li {
      @apply flex;

      > label {
        @apply mr-2 mt-1 flex-auto shrink-0 grow-0 select-none;
      }

      > div {
        @apply flex-auto;
      }

      &[data-checked='true'] {
        @apply line-through;
      }
    }
  }
}

.ProseMirror {
  /* Placeholder Styles */
  .is-empty::before {
    @apply pointer-events-none float-left h-0 w-full text-black/40 dark:text-white/40;
  }

  &.ProseMirror-focused {
    /* Slashmenu Placeholder */
    > p.has-focus.is-empty::before {
      content: 'Write your epic blog..........';
    }

    > [data-type='columns']
      > [data-type='column']
      > p.is-empty.has-focus::before {
      content: 'Type  /  to browse options';
    }
  }

  /* Default Placeholder */
  & > .is-editor-empty::before {
    content: 'Start writing here....';
  }

  /* Blockquote Placeholder */
  blockquote .is-empty:not(.is-editor-empty):first-child:last-child::before {
    content: 'Enter a quote';
  }

  blockquote + figcaption.is-empty:not(.is-editor-empty)::before {
    content: 'Author';
  }

  [data-placeholder][data-suggestion]::before,
  [data-placeholder][data-suggestion] *::before {
    content: none !important;
  }

  /* Details Placeholder */
  [data-type='details'].is-editor-empty::before {
    content: none !important;
  }

  [data-type='details'] summary.is-empty::before {
    content: 'Enter a summary';
  }

  [data-type='detailsContent'] .is-empty::before {
    content: 'Enter details';
  }
}
.ProseMirror {
  p {
    @apply my-3 leading-relaxed first:mt-0 last:mb-0;
  }

  & > p {
    @apply my-6 first:mt-0 last:mb-0;
  }

  h1 {
    @apply text-2xl;
  }

  h2 {
    @apply text-xl;
  }

  h3 {
    @apply text-lg;
  }

  h4 {
    @apply text-lg;
  }

  h5 {
    @apply text-base;
  }

  h6 {
    @apply text-sm;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-bold first:mt-0 last:mb-0;
  }

  h1,
  h2,
  h3 {
    @apply mt-12;
  }

  h4,
  h5,
  h6 {
    @apply mt-8;
  }

  a {
    @apply font-semibold text-blue-600;
  }

  a.link {
    @apply font-extrabold text-blue-500 dark:text-blue-400;
  }

  mark {
    @apply rounded-sm bg-red-500 decoration-clone px-0 py-1 text-inherit dark:bg-red-400;
  }

  & img {
    @apply h-auto w-full max-w-full;
  }

  [data-type='horizontalRule'] {
    @apply my-8 cursor-pointer py-4 transition-all duration-100 ease-in-out;

    &.ProseMirror-selectednode {
      @apply bg-black/5 dark:bg-white/10;

      hr {
        @apply border-t-black/30 dark:border-t-white/30;
      }
    }

    &:hover:not(&.ProseMirror-selectednode) {
      @apply bg-black/5;
      @apply dark:bg-white/10;
    }

    hr {
      @apply border-0 border-t border-black/20 bg-black/80;
      @apply dark:border-white/20 dark:bg-white/80;
    }
  }

  [data-type='emoji'] {
    display: inline-block;

    img {
      width: 1em;
      height: 1em;
      object-fit: cover;
      display: block;
    }
  }
}
